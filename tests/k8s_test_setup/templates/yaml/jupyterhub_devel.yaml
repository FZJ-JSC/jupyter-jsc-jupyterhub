apiVersion:  v1
kind: Service
metadata:
  name: jupyterhub-<ID>
  namespace: <NAMESPACE>
spec:
  selector:
    app: jupyterhub-<ID>
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8000
    - name: ssh
      port: 2222
      protocol: TCP
      targetPort: 2222
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub-<ID>
  namespace: <NAMESPACE>
spec:
  selector:
    matchLabels:
      app: jupyterhub-<ID>
  template:
    metadata:
      labels:
        app: jupyterhub-<ID>
    spec:
      securityContext:
        fsGroup: 100
        runAsUser: 0
      imagePullSecrets:
      - name: gitlab-registry
      containers:
      - image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/jupyterhub-relaunch:<JUPYTERHUB_VERSION>
        imagePullPolicy: Always
        name: main
        env:
        - name: DEVEL
          value: "true"
        - name: SQL_DATABASE
          value: "/tmp/shared-data/jupyterhub.sqlite"
        - name: RESERVATIONS_FILE
          value: "/home/jupyterhub/reservations.json"
        - name: INCIDENTS_FILE
          value: "/tmp/shared-data/incident-check/active_incidents.json"
        - name: STATIC_FILES_SRC
          value: "/home/jupyterhub/jupyterhub-static/static/default"
        - name: STATIC_FILES_DEST
          value: "/home/jupyterhub/jupyterhub-static/static/<JUPYTERHUB_ALT_NAME>"
        - name: TEMPLATE_FILES_SRC
          value: "/home/jupyterhub/jupyterhub-static/templates/default"
        - name: TEMPLATE_FILES_DEST
          value: "/home/jupyterhub/jupyterhub-static/templates/<JUPYTERHUB_ALT_NAME>"
        - name: K8SMGRHDFCLOUD_AUTHENTICATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: k8smgr-drf-<ID>
              key: JUPYTERHUB_USER_BASIC
        - name: UNICOREMGR_AUTHENTICATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: unicoremgr-drf-<ID>
              key: JUPYTERHUB_USER_BASIC
        - name: TUNNEL_AUTHENTICATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: tunnel-drf-<ID>
              key: JUPYTERHUB_USER_BASIC
        - name: TUNNEL_DEPLOYMENT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: shared-data
          mountPath: /tmp/shared-data
        - name: files
          mountPath: /tmp/jupyterhub_ssh/authorized_keys
          subPath: authorized_keys
        - name: files
          mountPath: /tmp/jupyterhub_home/create_patch.sh
          subPath: create_patch.sh
        - name: files
          mountPath: /tmp/jupyterhub_home/jupyterhub_custom_config.json
          subPath: jupyterhub_custom_config.json
        - name: files
          mountPath: /tmp/jupyterhub_home/jupyterhub_config.py
          subPath: jupyterhub_config.py
        - name: files
          mountPath: /tmp/jupyterhub_vscode/settings.json
          subPath: settings.json
        - name: files
          mountPath: /tmp/jupyterhub_vscode/tasks.json
          subPath: tasks.json
        - name: files
          mountPath: /tmp/jupyterhub_vscode/launch.json
          subPath: launch.json
        - name: certs
          mountPath: /tmp/jupyterhub_certs/ca-root.pem
          subPath: ca-root.pem
      - image: python:3.9-alpine3.14
        name: cleanup-sql
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args:
        - -c
        - >-
            pip install requests &&
            python3 -u /tmp/cleanup_sql.py
        env:
        - name: SQL_DATABASE
          value: "/tmp/shared-data/jupyterhub.sqlite"
        - name: SLEEP
          value: "30"
        - name: UNICOREMGR_AUTHENTICATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: unicoremgr-drf-<ID>
              key: JUPYTERHUB_USER_BASIC
              optional: false
        - name: K8SMGRHDFCLOUD_AUTHENTICATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: k8smgr-drf-<ID>
              key: JUPYTERHUB_USER_BASIC
              optional: false
        volumeMounts:
        - name: shared-data
          mountPath: /tmp/shared-data
        - name: files
          mountPath: /home/jupyterhub/jupyterhub_custom_config.json
          subPath: jupyterhub_custom_config.json
        - name: files
          mountPath: /tmp/cleanup_sql.py
          subPath: cleanup_sql.py
        - name: certs
          mountPath: /home/jupyterhub/ca-root.pem
          subPath: ca-root.pem
      - image: python:3.9-alpine3.14
        name: maintenance-check
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args:
        - -c
        - >-
            pip install jsonformatter python-dateutil requests &&
            mkdir -p $OUTPUT_DIR &&
            python3 -u /tmp/maintenance-check.py
        env:
        - name: CUSTOM_CONFIG_PATH
          value: "/tmp/jupyterhub_custom_config.json"
        - name: OUTPUT_DIR
          value: "/tmp/shared-data/maintenance-check"
        - name: LOGGER_NAME
          value: "MaintenanceCheck"
        volumeMounts:
        - name: shared-data
          mountPath: /tmp/shared-data
        - name: files
          mountPath: /tmp/jupyterhub_custom_config.json
          subPath: jupyterhub_custom_config.json
        - name: files
          mountPath: /tmp/maintenance-check.py
          subPath: maintenance-check.py
      volumes:
      - name: shared-data
        emptyDir: {}
      - name: files
        configMap:
          defaultMode: 400
          name: jupyterhub-files-<ID>
      - name: certs
        secret:
          defaultMode: 400
          secretName: certs-<ID>
      - name: keypairs
        secret:
          defaultMode: 400
          secretName: keypairs-<ID>
