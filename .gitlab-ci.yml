stages:
  - build

build-devel:
  stage: build
  image: moby/buildkit:latest
  variables:
    CACHE_IMAGE: "$CI_REGISTRY_IMAGE:buildcachedevel"
  script:
    # Authenticate to your registry
    - mkdir -p ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
    - buildkitd &
    - sleep 5
    - buildctl build --frontend dockerfile.v0 --export-cache type=registry,ref=$CACHE_IMAGE,mode=max --import-cache type=registry,ref=$CACHE_IMAGE --local context=${CI_PROJECT_DIR} --local dockerfile=${CI_PROJECT_DIR}/devel/ --output type=image,name=${CI_REGISTRY_IMAGE}:devel,push=true --output type=image,name=${CI_REGISTRY_IMAGE}:devel${CI_COMMIT_SHORT_SHA},push=true
  rules:
    - when: manual
  allow_failure: true

build-tag:
  stage: build
  image: moby/buildkit:latest
  variables:
    CACHE_IMAGE: "$CI_REGISTRY_IMAGE:buildcache"
  script:
    - mkdir -p ~/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > ~/.docker/config.json
    - buildkitd &
    - sleep 5
    - buildctl build --frontend dockerfile.v0 --export-cache type=registry,ref=$CACHE_IMAGE,mode=max --import-cache type=registry,ref=$CACHE_IMAGE --local context=${CI_PROJECT_DIR} --local dockerfile=${CI_PROJECT_DIR} --output type=image,name=${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG},push=true --output type=image,name=${CI_REGISTRY_IMAGE}:latest,push=true
  rules:
    - if: $CI_COMMIT_TAG
