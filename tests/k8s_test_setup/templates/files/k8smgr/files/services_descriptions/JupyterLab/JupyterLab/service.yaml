apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-<servername>
  namespace: <namespace>
binaryData:
  # Oneliner to get binary data from input directory:
  # tar -czf input.tar.gz input && base64 -w 0 input.tar.gz && echo && rm input.tar.gz
  input.tar.gz: H4sIAKX9QmIAA+1YbU/jOBDmc37FXEAUTtumb7Qr7lipQG/pLm/Xl2URQpGbuI0hjbO2Uyio//3GSeEaqh58uHJaXR4qhdoz9oznmfGkLAgjZa2tFEVEvb6jn6X6TnH++YS1UrVcLu7Ua7Vqaa1YKpdqtTXYWa1ZCSKpiABYuxU0eqBiqdxr8z8pWBx/fQaqIL3V7KEDjIFdFv9KqVZ/Ef9KTce/uBpz0vifx3/9F6vPAqtPpGcY69ALXaIo0GAMYyIY6ftUGvQ+5ELBl975ZbfZPurt242Dbutbq3tp99rHexuP8zPnLT04tSJJhbRSc71Osz21iKPYmKmJYRy22nvmxhY4LuiHy0RARhT/f9xvdI7szlmvfdC8Kl5PTdg24ZPl0rEVRL4P5U+bJdjchPDOxRmDOh4Hs0NVFIKKgoD64BDfNw0nEj7kj8CMIuY63KW7sPGIRnxrtk8bJ01cV082IuVxwR6IYjzYBcVvaQALTnXPvjZPZxoHPFA0UPnuJMQlSRj6zIm1rRvJA5RxIfdohoIPBZXS3IXKzgcwB4T51MVvA+JLigOeGvn2CCXIkOLwzINu7IGJ81J/txOPcP7R9LhU+oi08O1HORoK23MHjs8jV8sjkYdU2QE6qiXk2MnnzLTDuTk5HVQt97FarcTb6SLwdFJ6YlF5Os1B/juY52edrrl4RnHgU6OdbqPb68QTcdSWxQrPBdkXx0txEHTEkYXaEf21HzHfhWcFQxP1wKPOLfyIuCLAAvCooAUcvqA55IdHxhRIAI7gwQ3vw53HHA+w0ElA9kXE/1sxpil4HHmH/KOO4gKZyQZwdQX5Abp4dIauWwWXyVs70pGy+xNFJVxf/wbKo4EBiMNW5yvSu/G5ae+j6529jS0kxHLt7VhrfV7vpPEdGNrnutSFMSMw5rGR+d/H/BMg4wZseELCRcWLRvu0dfr5zcqJbxsvTYb8UKVGtUEpJ5Od4xh9OYr6gAy55FFO6EApwCDyO9wd45XcJnDuUyIpOJgseOpo3IgFTCpB8IzNuRUTSiwu9QH6PhYgkpK9ZwpKzwOJ6n0iQf23uvZ0ZP/kXuKd5gfcw7APfJBaonF8fHbRPNR50xoAUzkJI472Kw95VygUYLL8aJCaE+WxYLh4CjPLsNqBRZVjYR64L7ydPHkr6RK7D5Ft8GfMcEenCW797MLM7gI0ME+GnC9ZfcAM/GBCxQYbio0ojxRUXLB0rlg3fDwhgTXGiyK+P26iEHktvKifl+iYT3VeQT7vxNTDRMBaP7WSb4VwYvzX116GGZL+7zkwK9njlf6vWKtWn/u/sn5PKFXxk/V/7wEH9kA3AwkDtrYNp9ChYkxFIwwLLMRZs1iI/8zUlOBc2XhjaoH5kqClZu2RPCEB3niiENc/22N4OwUo3xURTa0Vd5d7oPuQ1DgWFLwyiMtt7IQUlhWJUo+m9Kjvo8GjEQl0O3VlPrew5vU0vQIXi/p3tC85VkVlj8j9U/9lS/agm55SsVyFX+cf6RW1Sj8aDKiINXDBRY1FBe5O3ij+I2IKN1CK66P6Q3eKKy2Ws/zHLOCjVf0M8Mb3/1K5Vi5XqjX9/letV7L3//dAKv46sbh9x4Xv/ps/BrxW/4uV+ov41yrVUlb/3wPz7/9JB3ikSQAXmgRm1qdlyJAhQ4YMGTJkyJAhQ4YMGTJkyPAz4y/MrMiQACgAAA==
---
apiVersion: v1
kind: Service
metadata:
  name: svc-<servername>
  namespace: <namespace>
spec:
  selector:
    app: depl-<servername>
  ports:
    - name: https
      protocol: TCP
      # port must be used in start.sh file when ordering a tunnel
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <namespace>
  name: depl-<servername>
  labels:
    app: depl-<servername>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: depl-<servername>
  template:
    metadata:
      labels:
        app: depl-<servername>
        user-jupyterlab: "true"
    spec:
      imagePullSecrets:
        - name: gitlab-registry
#      nodeSelector:
#        userlabs: "true"
#      tolerations:
#        - key: "jupyter-jsc/userlabs"
#          value: "true"
#          effect: "NoSchedule"
      containers:
        - name: main
          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/user-jupyterlab:venv-latest
#          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/k8s-service-images/jupyterlab-lmod:0.1
          imagePullPolicy: Always
          command: ["/bin/bash"]
          args:
            - -c
            - >-
                tar -xzf /tmp/input.tar.gz -C /tmp &&
                /bin/bash /tmp/input/start.sh
          # command: ["/bin/sh", "-c", "--"]
          # args: ["while true; do sleep 30; done;"]
          envFrom:
          # secret <secret_name> will be created by k8s mgr.
          - secretRef:
              name: <secret_name>
          - configMapRef:
              name: userhome-quota-<quotavo>
          volumeMounts:
            - name: files
              mountPath: "/tmp/input.tar.gz"
              subPath: input.tar.gz
      securityContext:
        fsGroup: 100
      volumes:
        - name: files
          configMap:
            defaultMode: 400
            name: cm-<servername>
