apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-<id>
  namespace: <namespace>
binaryData:
  # Oneliner to get binary data from input directory:
  # tar -czf input.tar.gz input && base64 -w 0 input.tar.gz && echo && rm input.tar.gz
  input.tar.gz: H4sIAFXWSmIAA+1YbU/bSBDms3/F1EVNe2pi573qHUiBpCUtFC4vRxFC1sbexAuO191dBwLKf79ZG7iYKFc+ND1V5yeRHO/O7M77zoaFUaysrY3CRjSbdf0sN+v28vMBW+VapVKp16t2s7JllyvlRnkL6psVK0UsFREAW1eCxrdUrKX73vwvCpb4X9tAlaS/mT20gxuN2jr/V+3GU/9XG3X0v70ZcbL4n/v/5QtrxEJrRKRvGC9hGHlEUaDhDGZEMDIKqDToTcSFgk/Dk7NBp3cw3HNa+4PuX93BmTPsHe5s3y3PnHT14MKKJRXSyswN+53ewiKuYjOm5obR7vZ2zO3X4HqgHx4TIZlS/H231+ofOP3jYW+/c25fLEx4Y8Ku5dGZFcZBAJXdV2V49Qqiaw9nDOr6HMw+VXEEKg5DGoBLgsA03FgEUDwAsxUrnwt2SxTj4XtQ/IqGsCL34Phz5wtupjn2eahoqIqDeUTfA4migLkJt3UpeYg0HhTuzEjwiaBSmu+hWn8L5piwgHr4NiaBpDjgq2ngTJGCTCgO3ws5SIQ0cV7qdycVGufvTJ9Lpa2gia/eyelEOL43dgMee5oeY3VClRNyL6GQM7dYQHu1ex+cbnthFpZotM80zbtarWouFgUofgXz5Lg/MFc1TzyWGe0PWoNhP5lIzL3OyKgthk1iaMVB0CnH8NHi6ddRzAIPHhkMHWH7PnWv4FvMFQEWgk8FLeHwKS2gY30yo0BCcAUPL/kIrn3m+oAVSgKGTUyCfxiT+AKfY8Bg4FBXcYEhxcZwfg7FMap4cHzUWVglj8krJ9b2d0ZzRSVcXPwOyqehAYh2t/8Z47L1sePsoer9ne3X6Ob13G8SrpfLfEetr8BQPs+jHswYgRlPhCz+MeO7gHE0ZpMjEq0ynrZ6X7pfPj6bOdVt+6nIUJyozKgWKKNkunPio08H8QgwKM54XBDaUQrQifwad0d/pccAnASUSAoupgBaHYWbspBJJQja2FxaMQ2J1aXewijAykEytDdMQflxIGW9SSlo8FzVHkz2b+ql2un4gBuYjICPM0u0Dg+PTzttnSjdMTBVkDDlKL/yMe5KpRLM15sGQ3OufBZOVq1wLxmWKbCoci3MA++JtvMHbSVdI3cbow3+TCLc1WmCWz+qcC93CVqYJxPO16w+ZgZ+MaESgQ3FppTHCqoeWDpXrEs+m5PQmmGFTwr/ZRxhXAs/HhUlKhZQnVdQLLpJ6GEiYJFeWOlbKZob//V5lePHIu3/Hv27kT2+0//ZjVot6f/serNR0feEcg2/ef/3M+DCDuhuIY2A128Mt9SnYkZFK4pKLMJZ0y4lHzMzJThXDh68mmC5smiq+95JHpEQD05RSsqo4zM85EKkH4iYZtZKussd0I1KZhzrEp48xOMOtkkKq5NEqjtT+jQIUODplIS61zo3H1tY82KRXYGLVf5rOpIci6typuTmoTlzJLvVLVXZrtTgt+VHdkXNMorHYyoSDlxwlWOVgXvzZ5J/i5nCDZTi2lQfdBu50Zp7n/+YBXy6qb8Bnnn/L1calUq11tD3v1qzmt//fwYy/teJxZ1rLgLvR/4Z8L36b1ebT/zfqNby+/9PwfL9P20kD3QQwKkOAjNv93LkyJEjR44cOXLkyJEjR44cOXLk+JXxNwE5auUAKAAA
---
apiVersion: v1
kind: Service
metadata:
  name: svc-<id>
  namespace: <namespace>
spec:
  selector:
    app: depl-<id>
  ports:
    - name: https
      protocol: TCP
      # port must be used in start.sh file when ordering a tunnel
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <namespace>
  name: depl-<id>
  labels:
    app: depl-<id>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: depl-<id>
  template:
    metadata:
      labels:
        app: depl-<id>
        user-jupyterlab: "true"
    spec:
      imagePullSecrets:
        - name: gitlab-registry
#      nodeSelector:
#        userlabs: "true"
#      tolerations:
#        - key: "jupyter-jsc/userlabs"
#          value: "true"
#          effect: "NoSchedule"
      containers:
        - name: main
          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/user-jupyterlab:venv-latest
#          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/k8s-service-images/jupyterlab-lmod:0.1
          imagePullPolicy: Always
          command: ["/bin/bash"]
          args:
            - -c
            - >-
                tar -xzf /tmp/input.tar.gz -C /tmp &&
                /bin/bash /tmp/input/start.sh
          # command: ["/bin/sh", "-c", "--"]
          # args: ["while true; do sleep 30; done;"]
          envFrom:
          # secret <secret_name> will be created by k8s mgr.
          - secretRef:
              name: <secret_name>
          - configMapRef:
              name: userhome-quota-<quotavo>
          volumeMounts:
            - name: files
              mountPath: "/tmp/input.tar.gz"
              subPath: input.tar.gz
      securityContext:
        fsGroup: 100
      volumes:
        - name: files
          configMap:
            defaultMode: 400
            name: cm-<id>
