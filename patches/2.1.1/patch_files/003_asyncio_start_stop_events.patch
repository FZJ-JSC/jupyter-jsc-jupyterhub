diff -Naurx .git -x node_modules -x share -x __pycache__ ../jupyterhub/jupyterhub/user.py ../jupyterhub-patched/jupyterhub/user.py
--- ../jupyterhub/jupyterhub/user.py	2022-03-28 14:09:37.870396719 +0000
+++ ../jupyterhub-patched/jupyterhub/user.py	2022-03-28 15:17:37.881676053 +0000
@@ -8,6 +8,7 @@
 from urllib.parse import quote
 from urllib.parse import urlparse
 
+from asyncio import Event
 from sqlalchemy import inspect
 from tornado import gen
 from tornado import web
@@ -226,6 +227,10 @@
     log = app_log
     settings = None
     _auth_refreshed = None
+    # asyncio Events to signal start and stop of a new server.
+    # These events get set in the spawner's start and stop functions.
+    spawn_start_event = Event()
+    spawn_stop_event = Event()
 
     def __init__(self, orm_user, settings=None, db=None):
         self.db = db or inspect(orm_user).session
@@ -677,6 +682,8 @@
             f = maybe_future(spawner.start())
             # commit any changes in spawner.start (always commit db changes before yield)
             db.commit()
+            # Set asyncio spawn Event
+            self.spawn_start_event.set()
             url = await gen.with_timeout(timedelta(seconds=spawner.start_timeout), f)
             if url:
                 # get ip, port info from return value of start()
@@ -859,6 +866,7 @@
         spawner._stop_pending = True
 
         self.log.debug("Stopping %s", spawner._log_name)
+        self.spawn_stop_event.set()
 
         try:
             api_token = spawner.api_token
