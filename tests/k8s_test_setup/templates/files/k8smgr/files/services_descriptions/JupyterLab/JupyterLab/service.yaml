apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-<servername>
  namespace: <namespace>
binaryData:
  # Oneliner to get binary data from input directory:
  # tar -czf input.tar.gz input && base64 -w 0 input.tar.gz && echo && rm input.tar.gz
  input.tar.gz: H4sIALtyRWIAA+1Y60/jOBDnc/6KuYAonLZNX5QVdyAV6G67y+v6WBYhFLmJ2xjSOGs7hYL6v984Aa6h6sGHLafV5ddKaewZe94elwVhpKyVpaKI2N7e0s/S9lZx9vmElVK1XC6Va9VaFcdL5VKtuAJbyxUrQSQVEQArN4JG91QspHtt/hcFi/2vbaAK0lvOHtrBtVp1kf8rRZxL+79S26quQHE54qTxP/f/6m9WnwVWn0jPMFahF7pEUaDBGMZEMNL3qTToXciFgi+9s4tuo93s7dv1g27rW6t7YffaR7trD7MzZy09OLUiSYW0UnO9TqM9tYij2JipiWEcttq75toGOC7oh8tEQEYUfz/s1ztNu3Paax80LotXUxM2TdizXDq2gsj3oby3XoL1dQhvXZwxqONxMDtURSGoKAioDw7xfdNwIuFDvglmPVIeF+yeKMaDHVD8hgYwJ3f39GvjBDfTHAc8UDRQ+e4kpDtAwtBnTsxtXUseII0LuQczFHwoqJTmDlS2PoA5IMynLr4NiC8pDnhq5NsjpCBDisOPQnZjIU2cl/rdToTG+QfT41JpK2jim49yNBS25w4cn0eupsdYHVJlB9yNKeTYyefQXmjYb432Sf24MTVzM3Tab5ruY7VaMafTHOS/g3l22uma89rHXkuNdrr1bq8TT8QmX2Ro1BhDJza24iDoiGMIaRH1az9ivgvPDIaOsgOPOjfwI+KKAAvAo4IWcPic5tC5HhlTIAE4ggfXvA+3HnM8wColAUMnIv4/jHGMgccxaDB4qKO4wLBiA7i8hPwAVWyeokWsgsvkjR1pH9j9iaISrq7+AOXRwADEYavzFWOz/rlh76Pqnd21DXT1Yu7NmGt1lu+4/h0Yyue61IUxIzDmsZD5P8d8DzCWBmx4TMJ5xvN6+6R18vnNzIluay9FhvxQpUa1QCklk51jH31pRn3AoLjgUU5oRylAJ/Jb3B39lRwFcOZTIik4mAZodRRuxAImlSBoY3NmxSQk5pf6AH0fqwdJ0d4xBaXngYT1LqGg/ltVezLZv6mXaKfjA+5g2Ac+SC1RPzo6PW8c6kRpDYCpnIQRR/mVh3FXKBRgstg0GJoT5bFgOG+FR8mwVIFFlWNhHrgvtJ08aSvpArkPMdrgrzjCHZ0muPWzCo9yF6COeTLkfMHqA2bgFxMqFthQbER5pKDigqVzxbrm4wkJrDFW+bj4X0chxrXwon5eomI+1XkF+bwThx4mAhbqqZW8FcKJ8V+fWRl+HpL+79m3S9njlf4P27+k/ytubdfK+p5QquI36//eAw7sgu4UkgjY2DScQoeKMRX1MCywEGfNYiH+mKkpwbmy8dDVBLNVRVM99k7ymAR4aIpCXEJtj+EBFyB9V0Q0tVbcXe6CblJS41iT8NQhLrexTVJYmSRSPZjSo76PAo9GJNC91qX53MKaV9P0ClzM89/SvuRYWJU9IndPzZkt2b1uqUrFchV+n32kV9Qs/WgwoCLmwAXnOeYZuDt5I/mPiCncQCmuTfVJt5FLrbeP+Y9ZwEfL+hvgjfd/vP6Vy5VqTd//qtuV7P7/Hkj5XycWt2+58N2f+WfAa/W/WNl+4f9apVrK6v97YPb+nzSRTR0EcK6DwMxavQwZMmTIkCFDhgwZMmTIkCFDhgwZfmX8DSYzHzgAKAAA
---
apiVersion: v1
kind: Service
metadata:
  name: svc-<servername>
  namespace: <namespace>
spec:
  selector:
    app: depl-<servername>
  ports:
    - name: https
      protocol: TCP
      # port must be used in start.sh file when ordering a tunnel
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <namespace>
  name: depl-<servername>
  labels:
    app: depl-<servername>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: depl-<servername>
  template:
    metadata:
      labels:
        app: depl-<servername>
        user-jupyterlab: "true"
    spec:
      imagePullSecrets:
        - name: gitlab-registry
#      nodeSelector:
#        userlabs: "true"
#      tolerations:
#        - key: "jupyter-jsc/userlabs"
#          value: "true"
#          effect: "NoSchedule"
      containers:
        - name: main
          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/user-jupyterlab:venv-latest
#          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/k8s-service-images/jupyterlab-lmod:0.1
          imagePullPolicy: Always
          command: ["/bin/bash"]
          args:
            - -c
            - >-
                tar -xzf /tmp/input.tar.gz -C /tmp &&
                /bin/bash /tmp/input/start.sh
          # command: ["/bin/sh", "-c", "--"]
          # args: ["while true; do sleep 30; done;"]
          envFrom:
          # secret <secret_name> will be created by k8s mgr.
          - secretRef:
              name: <secret_name>
          - configMapRef:
              name: userhome-quota-<quotavo>
          volumeMounts:
            - name: files
              mountPath: "/tmp/input.tar.gz"
              subPath: input.tar.gz
      securityContext:
        fsGroup: 100
      volumes:
        - name: files
          configMap:
            defaultMode: 400
            name: cm-<servername>
