apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-<id>
  namespace: <namespace>
binaryData:
  # Oneliner to get binary data from input directory:
  # tar -czf input.tar.gz input && base64 -w 0 input.tar.gz && echo && rm input.tar.gz
  input.tar.gz: H4sIADpRUGIAA+1YbW/aSBDOZ/+KqROV5lSwAQNV71KJJrShbV6Ol0urKLIWe8GbGK+7uyahEf/9Zu0kh4O45kPpqTo/IBnvzuzO+87CojhR1tZGYSNarYZ+VlsNe/l5j62qU6s5dsN2mtUtu1qrNhpb0NisWBkSqYgA2LoSNPlGxVq6783/omCp/7UNVEUGm9lDO7jZdNb5v243M//XW0383UL/15sYBmBvRpw8/uf+335mjVhkjYgMDGMbhrFPFAUazWBGBCOjkEqD3sRcKPgwPP0y6PQOh2/d9v6g+1d38MUd9j7t7dwuz5x29eDCSiQV0srNDfud3sIinmIzpuaGcdDt7Zk7L8DzQT98JiIypfj79m27f+j2T4a9/c65fbEwYdeEN5ZPZ1aUhCHU3jyvwvPnEF/7OGNQL+Bg9qlKYlBJFNEQPBKGpuElIoTyIZjtRAVcsG9EMR69BsWvaAQrcg9OPnaOcTPNsc8jRSNVHsxj+hpIHIfMS7mtS8kjpPGhdGvGgk8EldJ8DfXGSzDHhIXUx7cxCSXFgUBNQ3eKFGRCcfhOyEEqpInzUr+7mdA4f2sGXCptBU189UpOJ8IN/LEX8sTX9BirE6rciPsphZx55RLa66D3zu0eLMzSEo32maZ55Th1c7EoQfkzmKcn/YG5qnnqsdxof9AeDPvpRGrudUZGbTFsUkMrDoJOOYaPFk+/jhIW+vDAYOgI2w+odwVfE64IsAgCKmgFh89oCR0bkBkFEoEneHTJR3AdMC8ArFASMGwSEv7DmMYXBBwDBgOHeooLDCk2hvNzKI9RxcOTo87CqvhMXrmJtr87misq4eLid1ABjQxAHHT7HzEu2+877ltUvb+38wLdvJ57N+XaXuY7an8GhvL5PvVhxgjMeCpk+Y8ZfwMYR2M2OSLxKuNZu3fcPX7/ZOZMt53HIkN5onKjWqCcktnOqY8+HCYjwKD4wpOS0I5SgE7k17g7+is7BuA0pERS8DAF0Ooo3JRFTCpB0Mbm0opZSKwu9RJGIVYOkqO9YQqqDwMZ601GQcOnqnZvsn9TL9NOxwfcwGQEfJxbov3p08lZ50AnSncMTJUkTDnKrwKMu0qlAvP1psHQnKuARZNVK9xJhmUKLKo8C/PAf6Tt/F5bSdfIfYDRBn+mEe7pNMGtH1S4k7sCbcyTCedrVh8zA7+YUKnAhmJTyhMFdR8snSvWJZ/NSWTNsMKnhf8yiTGuRZCMyhIVC6nOKyiXvTT0MBGwSC+s7K0Sz43/+rwq8GOR9X8P/t3IHt/p/+ym46T9n91oNWv6nlB18Fv0fz8DHuyB7hayCHixa3iVPhUzKtpxXGExzpp2Jf2YuSnBuXLx4NUEy5VFU931TvKIRHhwikpaRt2A4SEXIf1AJDS3Vtpd7oFuVHLjWJfw5CE+d7FNUlidJFLdmjKgYYgCT6ck0r3WufnQwpoXi/wKXKzyX9OR5FhclTslN/fNmSvZN91SVe2aA78tP/IrapZRMh5TkXLggqscqwzcnz+R/GvCFG6gFNemeqfbyI3W3Lv8xyzg0039DfDE+3+11sQ7oNPU9z+nVS/u/z8DOf/rxOLuNReh/yP/DPhe/bfrrUf+b9ad4v7/U7B8/88ayUMdBHCmg8As2r0CBQoUKFCgQIECBQoUKFCgQIECBX5l/A0f+GPPACgAAA==
---
apiVersion: v1
kind: Service
metadata:
  name: svc-<id>
  namespace: <namespace>
spec:
  selector:
    app: depl-<id>
  ports:
    - name: https
      protocol: TCP
      # port must be used in start.sh file when ordering a tunnel
      port: 8443
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: <namespace>
  name: depl-<id>
  labels:
    app: depl-<id>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: depl-<id>
  template:
    metadata:
      labels:
        app: depl-<id>
        user-jupyterlab: "true"
    spec:
      imagePullSecrets:
        - name: gitlab-registry
#      nodeSelector:
#        userlabs: "true"
#      tolerations:
#        - key: "jupyter-jsc/userlabs"
#          value: "true"
#          effect: "NoSchedule"
      containers:
        - name: main
          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/user-jupyterlab:venv-latest
#          image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/k8s-service-images/jupyterlab-lmod:0.1
          imagePullPolicy: Always
          command: ["/bin/bash"]
          args:
            - -c
            - >-
                tar -xzf /tmp/input.tar.gz -C /tmp &&
                /bin/bash /tmp/input/start.sh
          # command: ["/bin/sh", "-c", "--"]
          # args: ["while true; do sleep 30; done;"]
          envFrom:
          # secret <secret_name> will be created by k8s mgr.
          - secretRef:
              name: <secret_name>
          - configMapRef:
              name: userhome-quota-<quotavo>
          env:
          - name: JUPYTERHUB_SSL_KEYFILE
            value: "/tmp/service_cert.key"
          - name: JUPYTERHUB_SSL_CERTFILE
            value: "/tmp/service_cert.crt"
          - name: JUPYTERHUB_SSL_CLIENT_CA
            value: "/tmp/service_ca.crt"
          volumeMounts:
            - name: files
              mountPath: "/tmp/input.tar.gz"
              subPath: input.tar.gz
            - name: secret-certs
              mountPath: "/tmp/service_cert.key"
              subPath: JUPYTERHUB_SSL_KEYFILE_DATA
            - name: secret-certs
              mountPath: "/tmp/service_cert.crt"
              subPath: JUPYTERHUB_SSL_CERTFILE_DATA
            - name: secret-certs
              mountPath: "/tmp/service_ca.crt"
              subPath: JUPYTERHUB_SSL_CLIENT_CA_DATA
      securityContext:
        fsGroup: 100
      volumes:
        - name: files
          configMap:
            defaultMode: 400
            name: cm-<id>
        - name: secret-certs
          secret:
            defaultMode: 400
            secretName: <secret_certs_name>
