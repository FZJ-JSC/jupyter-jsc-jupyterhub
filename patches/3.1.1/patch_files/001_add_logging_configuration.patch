diff -Naurx .git -x node_modules -x share -x __pycache__ ../jupyterhub/jupyterhub/app.py ../jupyterhub-patched/jupyterhub/app.py
--- ../jupyterhub/jupyterhub/app.py	2023-04-09 20:43:11.136138948 +0200
+++ ../jupyterhub-patched/jupyterhub/app.py	2023-04-09 20:44:14.546132490 +0200
@@ -1403,6 +1403,32 @@
     proxy_process = None
     io_loop = None
 
+    logging_filter_classes = Any(
+        help="""
+        An optional hook function that you can implement to filter logs.
+        """
+    ).tag(config=True)
+
+    def apply_logging_filter_classes(self):
+        """Add the logging filter class if defined"""
+        if self.logging_filter_classes is not None:
+            available_logger_dict = {
+                "jupyterhub": self.log,
+                "tornado": logging.getLogger("tornado"),
+                "oauthlib": logging.getLogger("oauthlib"),
+                "app_log": app_log,
+                "access_log": access_log,
+                "gen_log": gen_log
+            }
+            for key, value in available_logger_dict.items():
+                try:
+                    value.addFilter(self.logging_filter_classes[key]())
+                except KeyError:
+                    # Filter for logger key not defined
+                    pass
+                except Exception:
+                    self.log.exception("apply_logging_filter_class failed with exception: %s", self)
+
     @default('log_level')
     def _log_level_default(self):
         return logging.INFO
@@ -1507,6 +1533,8 @@
             logger.propagate = True
             logger.parent = self.log
             logger.setLevel(self.log.level)
+        
+        self.apply_logging_filter_classes()
 
     @staticmethod
     def add_url_prefix(prefix, handlers):
