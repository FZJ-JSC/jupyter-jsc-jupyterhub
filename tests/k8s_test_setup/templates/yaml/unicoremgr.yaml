apiVersion:  v1
kind: Service
metadata:
  name: unicoremgr-<ID>
  namespace: <NAMESPACE>
spec:
  selector:
    app: unicoremgr-<ID>
  type: ClusterIP
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: unicoremgr-<ID>
  namespace: <NAMESPACE>
spec:
  selector:
    matchLabels:
      app: unicoremgr-<ID>
  template:
    metadata:
      labels:
        app: unicoremgr-<ID>
    spec:
      securityContext:
        fsGroup: 100
      imagePullSecrets:
      - name: gitlab-registry
      containers:
      - image: registry.jsc.fz-juelich.de/jupyterjsc/k8s/images/backend-relaunch:<UNICOREMGR_VERSION>
        imagePullPolicy: Always
        name: unicoremgr-<ID>
        command: ["/bin/bash"]
        args:
        - -c
        - >-
            tar -xzf /tmp/files.tar.gz -C /tmp &&
            /bin/bash /home/unicoremgr/web/entrypoint.sh
            # while true; do sleep 30; done
            # /bin/bash /tmp/input/start.sh
        envFrom:
        - secretRef:
            name: unicoremgr-drf-<ID>
        env:
        - name: CONFIG_PATH
          value: "/tmp/files/config.json"
        - name: DEBUG
          value: "true"
        volumeMounts:
        - name: certs
          mountPath: /home/unicoremgr/certs/ca-root.pem
          subPath: ca-root.pem
        - name: certs
          mountPath: /home/unicoremgr/certs/unicoremgr.key
          subPath: unicoremgr.key
        - name: certs
          mountPath: /home/unicoremgr/certs/unicoremgr.crt
          subPath: unicoremgr.crt
        - name: files
          mountPath: /tmp/files.tar.gz
          subPath: files.tar.gz
      volumes:
      - name: files
        configMap:
          defaultMode: 400
          name: unicoremgr-files-<ID>
      - name: certs
        secret:
          defaultMode: 400
          secretName: certs-<ID>
