diff -Naurx .git -x node_modules -x share -x __pycache__ ../jupyterhub/jupyterhub/apihandlers/users.py ../jupyterhub-patched/jupyterhub/apihandlers/users.py
--- ../jupyterhub/jupyterhub/apihandlers/users.py	2022-03-29 11:34:21.000000000 +0000
+++ ../jupyterhub-patched/jupyterhub/apihandlers/users.py	2022-03-29 11:53:19.753848919 +0000
@@ -703,18 +703,17 @@
         # - spawner failed
         # - spawner pending start (what we expect)
         url = url_path_join(user.url, server_name, '/')
-        ready_event = {
-            'progress': 100,
-            'ready': True,
-            'message': f"Server ready at {url}",
-            'html_message': 'Server ready at <a href="{0}">{0}</a>'.format(url),
-            'url': url,
-        }
         failed_event = {'progress': 100, 'failed': True, 'message': "Spawn failed"}
 
         if spawner.ready:
             # spawner already ready. Trigger progress-completion immediately
             self.log.info("Server %s is already started", spawner._log_name)
+            now = datetime.now().strftime("%Y_%m_%d %H:%M:%S.%f")[:-3]
+            ready_event = spawner.ready_event
+            ready_event["message"] = ready_event.get("message", "").replace("<url>", url).replace("<now>", now)
+            ready_event["html_message"] = ready_event.get("html_message", "").replace("<url>", url).replace("<now>", now)
+            ready_event["url"] = ready_event.get("url", "").replace("<url>", url)
+            spawner.current_events.append(ready_event)
             await self.send_event(ready_event)
             return
 
@@ -758,6 +757,12 @@
         if spawner.ready:
             # spawner is ready, signal completion and redirect
             self.log.info("Server %s is ready", spawner._log_name)
+            now = datetime.now().strftime("%Y_%m_%d %H:%M:%S.%f")[:-3]
+            ready_event = spawner.ready_event
+            ready_event["message"] = ready_event.get("message", "").replace("<url>", url).replace("<now>", now)
+            ready_event["html_message"] = ready_event.get("html_message", "").replace("<url>", url).replace("<now>", now)
+            ready_event["url"] = ready_event.get("url", "").replace("<url>", url)
+            spawner.current_events.append(ready_event)
             await self.send_event(ready_event)
         else:
             # what happened? Maybe spawn failed?
@@ -773,6 +778,7 @@
                 self.log.warning(
                     "Server %s didn't start for unknown reason", spawner._log_name
                 )
+            spawner.current_events.append(failed_event)
             await self.send_event(failed_event)
 
 
diff -Naurx .git -x node_modules -x share -x __pycache__ ../jupyterhub/jupyterhub/spawner.py ../jupyterhub-patched/jupyterhub/spawner.py
--- ../jupyterhub/jupyterhub/spawner.py	2022-03-29 11:34:15.000000000 +0000
+++ ../jupyterhub-patched/jupyterhub/spawner.py	2022-03-29 11:54:07.085694115 +0000
@@ -342,6 +342,28 @@
         config=True
     )
 
+    ready_event = Dict(
+        {
+            'progress': 100,
+            'ready': True,
+            'message': "Server ready at <url>",
+            'html_message': 'Server ready at <a href="<url>"><url></a>',
+            'url': "<url>",
+        },
+        config=True,
+        help="""
+        Customize events shown to user when Server is ready.
+        <url> will be replaced by actual server url.
+        Default: {
+            'progress': 100,
+            'ready': True,
+            'message': "Server ready at <url>",
+            'html_message': 'Server ready at <a href="<url>"><url></a>',
+            'url': "<url>"
+        }
+        """
+    )
+
     options_form = Union(
         [Unicode(), Callable()],
         help="""
