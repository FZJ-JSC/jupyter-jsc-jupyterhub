diff -Naurx .git -x node_modules -x share -x __pycache__ ../jupyterhub/jupyterhub/apihandlers/users.py ../jupyterhub-patched/jupyterhub/apihandlers/users.py
--- ../jupyterhub/jupyterhub/apihandlers/users.py	2022-04-01 15:22:26.789475208 +0200
+++ ../jupyterhub-patched/jupyterhub/apihandlers/users.py	2022-04-05 13:08:29.778303564 +0200
@@ -2,6 +2,7 @@
 # Copyright (c) Jupyter Development Team.
 # Distributed under the terms of the Modified BSD License.
 import asyncio
+import copy
 import json
 from datetime import datetime
 from datetime import timedelta
@@ -71,6 +72,22 @@
         # add scopes to identify model,
         # but not the scopes we added to ensure we could read our own model
         model["scopes"] = sorted(self.expanded_scopes.difference(_added_scopes))
+
+
+        # Users should be able to receive there access_token, but not
+        # the refresh token.
+        auth_state = await user.get_auth_state()
+        model_auth_state = {}
+        allowed_auth_state_keys = (
+            user.authenticator.custom_config
+            .get("selfapihandler", {})
+            .get("allowed_auth_state_keys", ["access_token"])
+        )
+        for key, value in auth_state.items():
+            if key in allowed_auth_state_keys:
+                model_auth_state[key] = copy.deepcopy(value)
+        model["auth_state"] = model_auth_state
+        
         self.write(json.dumps(model))
 
 
